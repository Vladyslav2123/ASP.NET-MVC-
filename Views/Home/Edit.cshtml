@model UserForm
@{
	ViewData["Title"] = Model.FirstName + " " + Model.LastName;
	var positions = ViewData["Positions"] as List<Position>;
	var list = new SelectList(positions, "Id", "Title");

	var skills = ViewData["Skills"] as List<UserSkill>;
}

<div class="container-fluid custom-gray-bg">
	<div class="mb-3 text-center">
		<h1 class="my-header display-4">@Model.FirstName @Model.LastName</h1>
	</div>
	<div class="row justify-content-center">
		<div class="col-sm-6">
			<div class="card bg-black bg-opacity-25">
				@if (Model.SrcImage != null && Model.SrcImage.Count > 0)
				{
					@await Html.PartialAsync("_ImageCarousel", Model.SrcImage, new ViewDataDictionary(ViewData) { { "UserId", Model.UserId } })
				}
				<div class="card-body">
					<form method="post" enctype="multipart/form-data">
						@Html.AntiForgeryToken()
						<div class="mb-3">
							@Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
							@Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger" })
						</div>
						<div class="mb-3">
							@Html.LabelFor(m => m.LastName, new { @class = "form-label" })
							@Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })
						</div>
						<div class="mb-3">
							@Html.LabelFor(m => m.Description, new { @class = "form-label" })
							@Html.TextAreaFor(m => m.Description, new { @class = "form-control" })
							@Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
						</div>
						<div class="form-check form-switch mb-3">
							@Html.LabelFor(m => m.IsActive, new { @class = "form-check-label" })
							@Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input", @role = "switch" })
							@Html.ValidationMessageFor(m => m.IsActive, null, new { @class = "text-danger" })
						</div>
						<div class="mb-3">
							@Html.LabelFor(m => m.Birthday, new { @class = "form-label" })
							@Html.TextBoxFor(m => m.Birthday, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control", @id = "birthday" })
							@Html.ValidationMessageFor(m => m.Birthday, null, new { @class = "text-danger" })
						</div>
						<div class="mb-3">
							@Html.LabelFor(m => m.PositionId, new { @class = "form-label" })
							@Html.DropDownListFor(m => m.PositionId, list, new { @class = "form-select" })
							@Html.ValidationMessageFor(m => m.PositionId, null, new { @class = "text-danger" })
						</div>
						<div class="mb-3">
							@Html.LabelFor(m => m.Image, new { @class = "form-label" })
							@Html.TextBoxFor(m => m.Image, new { @class = "form-control", type = "file", accept = ".jpg, .png, .jpeg", multiple = "multiple" })
							@Html.ValidationMessageFor(m => m.Image, null, new { @class = "text-danger" })
						</div>
						<div class="row mb-3">
							<button class="btn btn-primary" type="submit">Save</button>
						</div>
					</form>
				</div>
			</div>
		</div>
		<div class="col-sm-6">
			<div class="card bg-black bg-opacity-25">
				<div class="card-body">
					<div class="row">
						<a class="btn btn-create" asp-controller="UserSkill" asp-action="CreateUserSkill" asp-route-id="@Model.UserId">Добавити навичку</a>
					</div>
					@if (TempData["Error"] != null)
					{
						<div class="alert alert-danger" role="alert">@TempData["Error"]</div>
					}
					@if (skills != null)
					{
						@foreach (var item in skills!)
						{
							<div>@item.Skill.Name</div>
							<div class="row align-items-center">
								<div class="col-md">
									<div class="progress">
										<div class="progress-bar" role="progressbar" style="width: @item.ProficiencyLevel%;" aria-valuenow="@item.ProficiencyLevel" aria-valuemin="0" aria-valuemax="100">@item.ProficiencyLevel%</div>
									</div>
								</div>
								<div class="col-sm-auto">
									<a class="btn btn-link" asp-controller="UserSkill" asp-action="Edit" asp-route-id="@item.Id">Edit</a>
								</div>
								<div class="col-sm-auto">
									<button asp-controller="UserSkill"
											asp-action="Delete"
											asp-area=""
											data-message="Видалити навичку @item.Skill.Name для користувача @item.User.FirstName?"
											data-body="@JsonSerializer.Serialize(new UserDeleteModel {id = item.Id})"
											class=" btn btn-danger post-button">
										Видалення
									</button>
								</div>
							</div>
						}
					}
				</div>
			</div>
		</div>
	</div>
</div>