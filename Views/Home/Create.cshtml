@model UserForm;
@{
    ViewData["Title"] = "Create user info";
    var positions = ViewData["Positions"] as List<Position>;
    var list = new SelectList(positions, "Id", "Title");
}

<div class="container-fluid custom-gray-bg">
    <h1 class="my-header display-4">Create</h1>
    <div class="row justify-content-center">
        <div class="col-sm-6">
            <div class="card bg-black bg-opacity-25">
                <div class="card-body">
                    <form method="post" enctype="multipart/form-data">
                        @Html.AntiForgeryToken()
                        <div class="mb-3">
                            @Html.LabelFor(m => m.FirstName, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.FirstName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.FirstName, null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.LastName, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.LastName, new { @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.LastName, null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Description, new { @class = "form-label" })
                            @Html.TextAreaFor(m => m.Description, new { @class = "form-control", @id = "birthday" })
                            @Html.ValidationMessageFor(m => m.Description, null, new { @class = "text-danger" })
                        </div>
                        <div class="form-check form-switch mb-3">
                            @Html.LabelFor(m => m.IsActive, new { @class = "form-check-label" })
                            @Html.CheckBoxFor(m => m.IsActive, new { @class = "form-check-input", @role = "switch" })
                            @Html.ValidationMessageFor(m => m.IsActive, null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Birthday, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Birthday, "{0:yyyy-MM-dd}", new { @type = "date", @class = "form-control" })
                            @Html.ValidationMessageFor(m => m.Birthday, null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.PositionId, new { @class = "form-label" })
                            @Html.DropDownListFor(m => m.PositionId, list,  new { @class = "form-select" })
                            @Html.ValidationMessageFor(m => m.PositionId, null, new { @class = "text-danger" })
                        </div>
                        <div class="mb-3">
                            @Html.LabelFor(m => m.Image, new { @class = "form-label" })
                            @Html.TextBoxFor(m => m.Image, new { @class = "form-control", type = "file", accept = ".jpg, .png, .jpeg", multiple="multiple"})
                            @Html.ValidationMessageFor(m => m.Image, null, new { @class = "text-danger" })
                        </div class="mb-3">
                        <button class="btn btn-primary" type="submit">Save</button>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>